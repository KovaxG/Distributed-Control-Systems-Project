package com.KovaxG.test;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Calendar;

public class DatabaseHandler {
	private static String DATABASE_DRIVER;
	private static String DATABASE_URL;
	private static String USERNAME;
	private static String PASSWORD;
	private static String MAX_POOL;
	
	private Connection connection;
	
	public DatabaseHandler(String connectionString, String user, String password) {
		DATABASE_DRIVER = "com.mysql.jdbc.driver";
		DATABASE_URL = connectionString;
		USERNAME = user;
		PASSWORD = password;
		MAX_POOL = "256";
	} // End of Constructor
	
	public boolean connect() {
		if (connection == null) {
			try {
				Class.forName(DATABASE_DRIVER).newInstance();
				connection = DriverManager.getConnection(DATABASE_URL, USERNAME, PASSWORD);
				return true;
			} catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException e) {
				e.printStackTrace();
				return false;
			}
		}
		return false;
	} // End of connect()
	
	public boolean saveLocation(int id, String latitude, String longitude, Calendar date) {
		if (!connect()) {
			System.out.println("Could not open a connection!");
			return false;
		}
		
		try {
			Date sqlDate = new Date(date.getTime().getTime());
			
			String query = " INSERT INTO table_name (id, latitude, longitude, date) VALUES (?, ?, ?, ?)";
			PreparedStatement preparedStmt;
			preparedStmt = connection.prepareStatement(query);
			
			preparedStmt.setInt    (1, id);
		    preparedStmt.setString (2, latitude);
		    preparedStmt.setString (3, longitude);
		    preparedStmt.setDate   (4, sqlDate);
		    
		    preparedStmt.execute();
		    
		    disconnect();
		    
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		return false;
	}
	
	public boolean disconnect() {
		if (connection != null) {
			try {
				connection.close();
				connection = null;
				return true;
			} catch (SQLException e) {
				e.printStackTrace();
				return false;
			}
		}
		return false;
	} // End of disconnect()
	
} // End of Class DatabaseHandler

/*
 Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("SELECT a, b, c FROM Table");

while (rs.next()) {
    int x = rs.getInt("a");
    String s = rs.getString("b");
    float f = rs.getFloat("c");
}





import java.sql.*;
import java.util.Calendar;

/**
 * A Java MySQL PreparedStatement INSERT example.
 * Demonstrates the use of a SQL INSERT statement against a
 * MySQL database, called from a Java program, using a
 * Java PreparedStatement.
 * 
 * Created by Alvin Alexander, http://devdaily.com

public class JavaMysqlPreparedStatementInsertExample
{

  public static void main(String[] args)
  {
    try
    {
      // create a mysql database connection
      String myDriver = "org.gjt.mm.mysql.Driver";
      String myUrl = "jdbc:mysql://localhost/test";
      Class.forName(myDriver);
      Connection conn = DriverManager.getConnection(myUrl, "root", "");
    
      // create a sql date object so we can use it in our INSERT statement
      Calendar calendar = Calendar.getInstance();
      java.sql.Date startDate = new java.sql.Date(calendar.getTime().getTime());

      // the mysql insert statement
      String query = " insert into users (first_name, last_name, date_created, is_admin, num_points)"
        + " values (?, ?, ?, ?, ?)";

      // create the mysql insert preparedstatement
      PreparedStatement preparedStmt = conn.prepareStatement(query);
      preparedStmt.setString (1, "Barney");
      preparedStmt.setString (2, "Rubble");
      preparedStmt.setDate   (3, startDate);
      preparedStmt.setBoolean(4, false);
      preparedStmt.setInt    (5, 5000);

      // execute the preparedstatement
      preparedStmt.execute();
      
      conn.close();
    }
    catch (Exception e)
    {
      System.err.println("Got an exception!");
      System.err.println(e.getMessage());
    }
  }
}
 */ 
